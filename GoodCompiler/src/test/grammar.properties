#S=stmt@language.Action.finish
#type=int@language.Action.type|real@language.Action.type|bool@language.Action.type|char@language.Action.type
#stmt=type , id@language.Action.stmt|stmt,com,id@language.Action.stmt|_@language.Action.stmt

#S=stmt@syntax.action.A1.a0  
#stmt=type,id,semi@syntax.action.A1.a1|type,arglist,],semi@syntax.action.A1.a2
#type=int@syntax.action.A1.a3|bool@syntax.action.A1.a4|real@syntax.action.A1.a5|char@syntax.action.A1.a6
#arglist=arglist,com,E@syntax.action.A1.a7|id,[,E@syntax.action.A1.a8
#E=number@syntax.action.A1.a9

S=语句组@test.syntax.action.GlobalAction.a1
语句组=语句@test.syntax.action.GlobalAction.a2|语句组,语句@test.syntax.action.GlobalAction.a3
语句=声明语句|执行语句@test.syntax.action.GlobalAction.a4

#声明语句
声明语句=全局变量定义语句|函数声明语句
函数声明语句=函数头,{,局部语句组或空@test.syntax.action.FuncAction.f1
函数头=类型和函数名,(,形式参数列表,)@test.syntax.action.FuncAction.f2
类型和函数名=类型,id@test.syntax.action.FuncAction.f17
形式参数列表=形式参数@test.syntax.action.FuncAction.f3|形式参数列表,com,形式参数@test.syntax.action.FuncAction.f4|_
形式参数=类型,id@test.syntax.action.FuncAction.f5
局部语句组或空=局部语句组,}@test.syntax.action.FuncAction.f6|}@test.syntax.action.FuncAction.f22
局部语句组=局部语句@test.syntax.action.FuncAction.f7|局部语句组,局部语句@test.syntax.action.FuncAction.f8
局部语句=局部变量定义语句|执行语句@test.syntax.action.FuncAction.f9|return语句@test.syntax.action.FuncAction.f19
return语句=return,值,semi@test.syntax.action.FuncAction.f18
局部变量定义语句=局部声明部分,semi@test.syntax.action.FuncAction.f10
局部声明部分=类型,局部声明元@test.syntax.action.FuncAction.f11|局部声明部分,com,局部声明元@test.syntax.action.FuncAction.f12
局部声明元=id@test.syntax.action.FuncAction.f13|局部数组参数表,]@test.syntax.action.FuncAction.f14
局部数组参数表=id,[,number@test.syntax.action.FuncAction.f15|局部数组参数表,com,number@test.syntax.action.FuncAction.f16


#全局变量定义部分
#多条全局变量定义语句=全局变量定义语句|多条全局变量定义语句,全局变量定义语句
全局变量定义语句=全局声明部分,semi
全局声明部分=类型,全局声明元@test.syntax.action.Vstmt.a1|全局声明部分,com,全局声明元@test.syntax.action.Vstmt.a2
类型=int@test.syntax.action.Vstmt.a3|bool@test.syntax.action.Vstmt.a3|char@test.syntax.action.Vstmt.a3|real@test.syntax.action.Vstmt.a3
全局声明元=id@test.syntax.action.Vstmt.a4|全局数组参数表,]@test.syntax.action.Vstmt.a5
全局数组参数表=id,[,number@test.syntax.action.Vstmt.a6|全局数组参数表,com,number@test.syntax.action.Vstmt.a7

#执行语句部分
执行语句=控制语句@test.syntax.action.ControlAction.pass|求值语句

控制语句=if语句@test.syntax.action.ControlAction.pass|while语句@test.syntax.action.ControlAction.pass
if语句=没有else的if语句@test.syntax.action.ControlAction.c9|没有else的if语句,else子句@test.syntax.action.ControlAction.c7
没有else的if语句=if语句头,{,执行语句组或空@test.syntax.action.ControlAction.c6
if语句头=if,(,布尔表达式,)@test.syntax.action.ControlAction.c5
else子句=else字符串,{,执行语句组或空@test.syntax.action.ControlAction.c4
else字符串=else@test.syntax.action.ControlAction.c10
while语句=while语句头,{,执行语句组或空@test.syntax.action.ControlAction.c3
while语句头=while字符串,(,布尔表达式,)@test.syntax.action.ControlAction.c2
while字符串=while@test.syntax.action.ControlAction.c8
执行语句组或空=执行语句组,}@test.syntax.action.ControlAction.pass|}
执行语句组=执行语句@test.syntax.action.ControlAction.c11|执行语句组,执行语句@test.syntax.action.ControlAction.c1

布尔表达式=与或值@test.syntax.action.ExpAction.e1
与或值=与前缀,非值@test.syntax.action.ExpAction.e2|或前缀,非值@test.syntax.action.ExpAction.e3|非值@test.syntax.action.ExpAction.e4
与前缀=与或值,and@test.syntax.action.ExpAction.e11
或前缀=与或值,or@test.syntax.action.ExpAction.e12
非值=not,元布尔值@test.syntax.action.ExpAction.e5|元布尔值@test.syntax.action.ExpAction.e6
元布尔值=false@test.syntax.action.ExpAction.e7|true@test.syntax.action.ExpAction.e7|值,关系运算符,值@test.syntax.action.ExpAction.e8|(,布尔表达式,)@test.syntax.action.ExpAction.e9

关系运算符=<@test.syntax.action.ExpAction.e10|>@test.syntax.action.ExpAction.e10|<>@test.syntax.action.ExpAction.e10|\=\=@test.syntax.action.ExpAction.e10|>\=@test.syntax.action.ExpAction.e10|<\=@test.syntax.action.ExpAction.e10

求值语句=值,semi@test.syntax.action.ValueAction.a11

值=加值@test.syntax.action.ValueAction.pass|左值,ass,加值@test.syntax.action.ValueAction.a10

加值=乘积值@test.syntax.action.ValueAction.pass|加值,+,乘积值@test.syntax.action.ValueAction.a9|加值,-,乘积值@test.syntax.action.ValueAction.a21
乘积值=自增值@test.syntax.action.ValueAction.pass|乘积值,*,自增值@test.syntax.action.ValueAction.a8
自增值=元值@test.syntax.action.ValueAction.pass|++,左值@test.syntax.action.ValueAction.a6|左值,++@test.syntax.action.ValueAction.a7
元值=number@test.syntax.action.ValueAction.a1|(,值,)@test.syntax.action.ValueAction.a2|函数调用@test.syntax.action.ValueAction.a4|左值@test.syntax.action.ValueAction.a5
左值=id@test.syntax.action.ValueAction.a12|数组访问参数表,]@test.syntax.action.ValueAction.a13
数组访问参数表=id,[,数组访问参数@test.syntax.action.ValueAction.a14|数组访问参数表,com,数组访问参数@test.syntax.action.ValueAction.a15
数组访问参数=值@test.syntax.action.ValueAction.pass
函数调用=id,(,实参列表,)@test.syntax.action.ValueAction.a16
实参列表=实参@test.syntax.action.ValueAction.a17|实参列表,com,实参@test.syntax.action.ValueAction.a18|_
实参=值@test.syntax.action.ValueAction.a20
